{"version":3,"sources":["Upload.js","Results.js","sample.png","Sample.js","Display.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","props","useState","selectedFile","setSelectedFile","isSelected","setIsSelected","fileTypeErrorMessage","setFileTypeErrorMessage","type","name","onChange","e","target","files","size","lastModifiedDate","toLocaleDateString","onClick","formData","FormData","append","axios","post","headers","then","res","data","message","updateResult","updateIsFileUploaded","catch","error","console","Results","results","filteredNames","Object","values","names","filter","includes","filteredDates","dates","map","ele","Sample","failedHighlights","failedTestCount","transferor","transferee","witnessA","witnessB","witnessC","witnessD","witnessE","dateA","dateB","dateC","dateD","testPassClass","className","src","SampleImg","alt","style","visibility","Display","setResults","isFileUploaded","setIsFileUploaded","Title","RefreshBtn","window","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eb197ec.chunk.js","sourcesContent":["\nimport React, {useState} from 'react';\nimport axios from \"axios\";\n\nexport default function Upload(props) {\n    const [selectedFile, setSelectedFile] = useState()\n    const [isSelected, setIsSelected] = useState(false)\n    const [fileTypeErrorMessage, setFileTypeErrorMessage] = useState(null)\n\n    const changeHandler = (e) => {\n        setSelectedFile(e.target.files[0])\n        setIsSelected(true)\n    }\n\n    const handleSubmission = () => {\n        const formData = new FormData()\n        formData.append('File', selectedFile)\n        axios.post('/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        .then((res) => {\n            if (res.data.message) {\n                setFileTypeErrorMessage(res.data.message)\n            } else {\n                props.updateResult(res.data)\n                props.updateIsFileUploaded(true)\n            }\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n    }\n \n    return (\n        <div>\n            <input type=\"file\" name=\"file\" onChange={changeHandler} />\n            {isSelected ? (\n                <div>\n                    <p>Filename: {selectedFile.name}</p>\n                    <p>Filetype: {selectedFile.type}</p>\n                    <p>Size in bytes: {selectedFile.size}</p>\n                    <p>\n                        lastModifiedDate:{' '}\n                        {selectedFile.lastModifiedDate.toLocaleDateString()}\n                    </p>\n                </div>\n            ) : (\n                <p>Select a file to show details</p>\n            )}\n            <div>\n                <button onClick={handleSubmission}> Upload</button>\n            </div>\n            <div>{fileTypeErrorMessage && fileTypeErrorMessage}</div>\n        </div>\n    )\n\n\n}","\n\nexport default function Results(props) {\n\n    const results = props.results\n\n\n    let filteredNames = []\n    if (results) {\n        filteredNames = Object.values(results.names).filter(name => name.includes('invalid'))\n    }\n    let filteredDates = []\n    if (results) {\n        filteredDates = Object.values(results.dates).filter(name => name.includes('invalid'))\n    }\n\n    return (\n        <section>\n            <h3>\n                {   \n                //hard coded\n                }\n            File Detected: Titles Registry Form 1 Transfer\n            </h3>\n            <h4>\n                Failed tests:\n            </h4>\n                {results && filteredNames.map(ele => \n                    <p>{ele}</p>\n                )}\n                {results && filteredDates.map(ele => \n                    <p>{ele}</p>\n                )}\n        </section>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/sample.6a280af7.png\";","import SampleImg from './sample.png'\nimport './Sample.css'\n\nexport default function Sample(props) {\n\n    //plan divide up the areas that float of over the interactive fields \n    //have an array that represents each area. input into the array which ones to fill in red outline.\n    //pin the divs to the image so they scale to fit it using the image as relative and the divs as absolute\n\n    \n    \n    \n    let failedHighlights = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ]\n    let failedTestCount = 0\n    let results = props.results\n    if (results) {\n        // console.log(results.names);\n        if (results.names.transferor) {\n            if (results.names.transferor.includes('invalid')) {\n                failedHighlights[0] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.transferee) {\n            if (results.names.transferee.includes('invalid')) {\n                failedHighlights[1] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.witnessA) {\n            if (results.names.witnessA.includes('invalid')) {\n                failedHighlights[2] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.witnessB) {\n            if (results.names.witnessB.includes('invalid')) {\n                failedHighlights[5] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.witnessC) {\n            if (results.names.witnessC.includes('invalid')) {\n                failedHighlights[8] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.witnessD) {\n            if (results.names.witnessD.includes('invalid')) {\n                failedHighlights[11] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.names.witnessE) {\n            if (results.names.witnessE.includes('invalid')) {\n                failedHighlights[10] = 1\n                failedTestCount += 1\n            }\n        }\n        // console.log(results.dates)\n        if (results.dates.dateA) {\n            if (results.dates.dateA.includes('invalid')) {\n                failedHighlights[3] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.dates.dateB) {\n            if (results.dates.dateB.includes('invalid')) {\n                failedHighlights[6] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.dates.dateC) {\n            if (results.dates.dateC.includes('invalid')) {\n                failedHighlights[9] = 1\n                failedTestCount += 1\n            }\n        }\n        if (results.dates.dateD) {\n            if (results.dates.dateD.includes('invalid')) {\n                failedHighlights[12] = 1\n                failedTestCount += 1\n            }\n        }\n    }\n    let testPassClass = 'fail'\n    if (failedTestCount === 0) {\n        // console.log('asd')\n        testPassClass = 'pass'\n    }\n\n\n    return (\n        <div>\n            <div className=\"sample-image-wrapper\">\n                <img className={testPassClass} src={SampleImg} alt=\"\" />\n                <div style={{visibility: failedHighlights[0] ? 'visible' : 'hidden' }} className=\"zero hover\"></div>\n                <div style={{visibility: failedHighlights[1] ? 'visible' : 'hidden' }} className=\"one hover\"></div>\n                <div style={{visibility: failedHighlights[2] ? 'visible' : 'hidden' }} className=\"two hover\"></div>\n                <div style={{visibility: failedHighlights[3] ? 'visible' : 'hidden' }} className=\"three hover\"></div>\n                <div style={{visibility: failedHighlights[4] ? 'visible' : 'hidden' }} className=\"four hover\"></div>\n                <div style={{visibility: failedHighlights[5] ? 'visible' : 'hidden' }} className=\"five hover\"></div>\n                <div style={{visibility: failedHighlights[6] ? 'visible' : 'hidden' }} className=\"six hover\"></div>\n                <div style={{visibility: failedHighlights[7] ? 'visible' : 'hidden' }} className=\"seven hover\"></div>\n                <div style={{visibility: failedHighlights[8] ? 'visible' : 'hidden' }} className=\"eight hover\"></div>\n                <div style={{visibility: failedHighlights[9] ? 'visible' : 'hidden' }} className=\"nine hover\"></div>\n                <div style={{visibility: failedHighlights[10] ? 'visible' : 'hidden' }} className=\"ten hover\"></div>\n                <div style={{visibility: failedHighlights[11] ? 'visible' : 'hidden' }} className=\"eleven hover\"></div>\n                <div style={{visibility: failedHighlights[12] ? 'visible' : 'hidden' }} className=\"twelve hover\"></div>\n                <div style={{visibility: failedHighlights[13] ? 'visible' : 'hidden' }} className=\"thirteen hover\"></div>\n            </div>\n        </div>\n    )\n}","import './Display.css'\n\n\nimport Upload from './Upload.js'\nimport Results from './Results.js'\nimport Sample from './Sample.js'\n\n\nimport { useState } from 'react'\n\n// import { useContext } from 'react'\n// import { FormContext } from './FormContext.js'\n\n\n// import axios from \"axios\";\n\n\n\nexport default function Display() {\n\n    const [results, setResults] = useState(null)\n    const [fileTypeErrorMessage, setFileTypeErrorMessage] = useState(null)\n    const [isFileUploaded, setIsFileUploaded] = useState(false)\n\n    function updateResult(data) {\n        setResults(data)\n    }\n    \n    function updateIsFileUploaded(data) {\n        setIsFileUploaded(data)\n    }\n\n    return (\n        <section>\n            <div> \n                {!isFileUploaded && \n                    <Upload \n                        updateResult={updateResult} \n                        updateIsFileUploaded={updateIsFileUploaded} \n                    />\n                }\n            </div>\n            <div>\n                {isFileUploaded &&\n                    <section className=\"results-sample-wrapper\">\n                        <Results results={results} />\n                        <Sample results={results} />\n                    </section>\n                }\n            </div>\n        </section>\n    )\n}","import './App.css';\nimport Display from './Display.js'\n\n\n\nfunction Title(){\n  return (\n    <div>\n      <h2>Form Validator</h2>\n    </div>\n  )\n}\n\nfunction RefreshBtn() {\n  function refreshPage() {\n    window.location.reload()\n  } \n  return (\n    <div>\n      <button type=\"submit\" onClick={() => refreshPage()}>Refresh/New File</button>\n    </div>\n  )\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        < Title />\n        < RefreshBtn />\n      </div>\n      < Display />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}